name: App Deployment
on:
  push:
    branches:
      - dev
      - master
    paths:
      - 'apps/**/*'
      - 'ci/**/*'
      - 'global/**/*'
      - 'libs/**/*'

env:
  BEFORE_SHA: ${{ github.event.before }}
  GC_PROJECT_ID: ${{ secrets.GC_PROJECT_ID }}
  GC_REGION: ${{ secrets.GC_REGION }}
  GC_SERVICE_ACCOUNT: ${{ secrets.GC_SERVICE_ACCOUNT }}
  GC_SERVICE_ACCOUNT_EMAIL: ${{ secrets.GC_SERVICE_ACCOUNT_EMAIL }}
  CLIENT_DEMO_7_ENV: ${{ secrets.CLIENT_DEMO_7_ENV }}
  API_DEMO_7_ENV: ${{ secrets.API_DEMO_7_ENV }}
  NX_CLOUD_AUTH_TOKEN: ${{ secrets.NX_CLOUD_AUTH_TOKEN }}
  # gcr.io 리포 이름

jobs:
  build_deploy:
    name: build only affected apps
    runs-on: ubuntu-latest
    steps:
      - name: Output the branch name!
        id: pushed_branch
        run: echo ::set-output name=name::$(echo $GITHUB_REF | cut -d'/' -f 3)

      # Nx git diff 사용으로 affted tree 받아오기 위함
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ steps.pushed_branch.outputs.name }}

      # GC_AUTH
      - name: GC_AUTH
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          project_id: ${{ secrets.GC_PROJECT_ID }}
          service_account_key: ${{ secrets.GC_SERVICE_ACCOUNT }}
          service_account_email: ${{ secrets.GC_SERVICE_ACCOUNT_EMAIL }}
      # 도커, 클라우드 런 사용 설정
      - name: Enable the necessary APIs and enable docker auth
        shell: bash
        run: |-
          gcloud services enable containerregistry.googleapis.com
          gcloud services enable run.googleapis.com
          gcloud --quiet auth configure-docker

      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - run: git fetch origin master

      # 디펜던시 캐싱
      - name: Cache node modules
        id: node-cache
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-v2-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-
      # Install
      - name: Install Dependencies
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: yarn install

      # Next Cache
      - name: Cache Next.js Build files
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}

      # Affected build
      - name: Run Affected Build and Deploy
        shell: bash
        run: npx nx affected --base=$BEFORE_SHA --dep_branch=${{ steps.pushed_branch.outputs.name }} --target=prod-build
